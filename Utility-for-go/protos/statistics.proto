syntax = "proto3";

option go_package = "impl/service";
//https://blog.csdn.net/weixin_33697898/article/details/85980797?utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromMachineLearnPai2%7Edefault-3.vipsorttest&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromMachineLearnPai2%7Edefault-3.vipsorttest
  //  protoc statistics.proto --go_out=.
//protoc statistics.proto  --go_out=plugins=grpc:.
package greet;

  //  protoc --go_out=. --go_opt=paths=source_relative \
  //  --go-grpc_out=. --go-grpc_opt=paths=source_relative \
  //  helloworld/helloworld.proto

//https://www.grpc.io/docs/languages/go/quickstart/
//protoc --go_out=. --go_opt=paths=  --go-grpc_out=. --go-grpc_opt=*.proto
//protoc --go_out=. --go_opt=paths=protos  --go-grpc_out=. --go-grpc_opt=grpc:. protos/*.proto


// The greeting service definition.
service Statistics {
  // Sends a greeting
  rpc BuyerTotal (BuyerRequest) returns (BuyerStatisticsReply);
  rpc UpdateBuyerUnReadCount (CountRequest) returns (StatisticsReply);
  rpc UpdateBuyerFriendCount (CountRequest) returns (StatisticsReply);
  rpc UpdateBuyerShopScore (CountRequest) returns (StatisticsReply);
  rpc UpdateBuyerPayingOrderCount (CountRequest) returns (StatisticsReply);
  rpc UpdateBuyerConfirmingOrderCount (CountRequest) returns (StatisticsReply);
  rpc UpdateBuyerCommentingOrderCount (CountRequest) returns (StatisticsReply);

  rpc SellerTotal (SellerRequest) returns (SellerStatisticsReply);
  rpc UpdateSellerUnReadCount (CountRequest) returns (StatisticsReply);
  rpc UpdateSellerFriendCount (CountRequest) returns (StatisticsReply);
}
message EmptyRequest {
}
message BuyerRequest {
    int64 buyer_id=1;
}
message SellerRequest {
 int64 seller_id=1;
}
message CountRequest {
  int64 id=1;
  int32 count = 2;
}
// The request message containing the user's name.
message StatisticsRequest {
  string name = 1;
}
message StatisticsReply{
    int32 status=1;
    string msg=2;
}
// The response message containing the greetings.
message BuyerStatisticsReply {
  //未锟斤拷 锟斤拷锟斤拷息 锟斤拷锟斤拷
  int64 unread_message_count = 1;
  //锟斤拷液锟斤拷锟?锟斤拷锟斤拷
  int64 friend_count = 2;
   //锟教筹拷锟斤拷锟斤拷
  int64 shop_score = 3;
  //锟斤拷支锟斤拷锟斤拷锟斤拷锟斤拷
  int64 paying_order_count=4;
  //锟斤拷确锟较讹拷锟斤拷锟斤拷
  int64 confirming_order_count=5;
  //锟斤拷锟斤拷锟桔讹拷锟斤拷锟斤拷
  int64 commenting_order_count=6;

}

message SellerStatisticsReply {

    //未锟斤拷 锟斤拷锟斤拷息 锟斤拷锟斤拷
  int64 unread_message_count = 1;
  //锟斤拷锟揭猴拷锟斤拷 锟斤拷锟斤拷
  int64 friend_count = 2;
}
