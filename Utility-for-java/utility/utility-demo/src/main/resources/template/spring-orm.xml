<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
                http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
                http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
                http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">
    <!-- 导入外部的properties文件 -->
    <context:property-placeholder location="classpath:jdbc.properties"/>
 <!--   <bean id="datasource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="url" value="${jdbcUrl}"></property>
        <property name="driverClassName" value="${driverClass}"></property>
        <property name="username" value="${user}"></property>
        <property name="password" value="${password}"></property>
        &lt;!&ndash; sql 心跳 &ndash;&gt;
        <property name= "testWhileIdle" value="true"/>
        <property name= "testOnBorrow" value="false"/>
        <property name= "testOnReturn" value="false"/>
        <property name= "validationQuery" value="select 1"/>
        <property name= "timeBetweenEvictionRunsMillis" value="60000"/>
        <property name= "numTestsPerEvictionRun" value="100"/>
    </bean>-->
    <!-- 数据连接信息 com.mchange.v2.c3p0.ComboPooledDataSource 该类不存在(hibernate-c3p0 jar 包 版本 不一致) -->
     <bean id="datasource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
         <property name="jdbcUrl" value="${jdbcUrl}"></property>
         <property name="driverClass" value="${driverClass}"></property>
         <property name="user" value="${user}"></property>
         <property name="password" value="${password}"></property>
     </bean>
    <!-- 配置SessionFactory -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <!-- 指定hibernate的配置文件位置 -->
       <!-- <property name="configLocation" value="classpath:hibernate-shop.cfg.xml"></property>-->
      <!--  <property name="packagesToScan" value="com.shop.model"/>-->
        <property name="mappingDirectoryLocations" value="classpath:hbm/shop"/>
        <!-- 配置c3p0数据库连接池  hibernate.xml 数据源  存在 则 需要 注释 提示 Error creating bean with name 'txManager' defined in
        出错 需要 该 数据源 不然 无法使用 txManager 网上 说 高版本 不支持 低版本 支持 -->
        <property name="dataSource" ref="datasource" />
    </bean>
    <!--配置sqlSessionFactory-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="datasource"/>
        <property name="configLocation" value="classpath:mybatis-spring-config.xml"/>
       <!-- Invalid bound statement (not found): com.shop.dao.ui.MenuDao.navs-->
        <property name="mapperLocations" value="classpath:mapper/admin/UserMapper.xml" />
      <!--  <property name="typeHandlers"  ref="enumHandler"></property>-->
    </bean>
    <!-- 扫描 接口   -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.shop.dao.ui" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
     <!--   <property name="annotationClass" value="org.apache.ibatis.annotations.Mapper"/>-->
    </bean>
    <!--  Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Property 'sqlSessionFactory' or 'sqlSessionTemplate' are required
      必须要  -->
    <bean id="mybaitsDao" class="com.utility.spring.MybatisDaoSupport">
        <property name="sqlSessionFactory" ref="sqlSessionFactory"/>
    </bean>

    <!-- 定义事务管理器（声明式的事务） -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="datasource" />
    </bean>
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="delete*" propagation="REQUIRED" read-only="false"
                       rollback-for="java.lang.Exception" />
            <tx:method name="add*" propagation="REQUIRED" read-only="false"
                       rollback-for="java.lang.Exception" />
            <tx:method name="modify*" propagation="REQUIRED" read-only="false"
                       rollback-for="java.lang.Exception" />
            <tx:method name="find*" propagation="SUPPORTS" />
        </tx:attributes>
    </tx:advice>
    <!--Executor named add. Cause: java.lang.NoSuchMethodException-->
    <aop:config proxy-target-class="true">
        <aop:pointcut id="interceptorPointCuts" expression="execution(public * com.shop.dao.admin.impl.mybatis.*.*(..))" />
        <aop:advisor advice-ref="txAdvice" pointcut-ref="interceptorPointCuts" />
    </aop:config>
    <!--扫描映射文件(mapper动态代理)-->
<!--    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage"  value="cn.wedding.dao"/>
    </bean>-->

    <!-- 配置声明式事务管理（采用注解的方式） -->
    <bean id="txManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"></property></bean>
    <tx:annotation-driven transaction-manager="txManager"/>

    <bean class="com.utility.spring.CustomRequestMappingHandlerMapping">
        <property name="order" value="0" />
    </bean>
</beans>