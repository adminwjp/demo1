@model ThreadEditModel

@{
    ViewData["Title"] = new string[] { Model.ThreadId > 0 ? "编辑贴子" : "发布贴子" };
    var user = UserContext.CurrentUser;
    var Section = ViewData.Get<Section>("Section", new Section());
    var selectListItems = ViewData.Get<List<SelectListItem>>("SelectListItems", new List<SelectListItem>());
    var threadcategories = ViewData.Get<IEnumerable<Category>>("threadcategories", null);
    var attachmentList = ViewData.Get<IEnumerable<Attachment>>("attachmentList", null);
    var videoAttachment = attachmentList?.Where(n => n.Position == AttachmentPosition.Body && n.MediaType == MediaType.Video).FirstOrDefault();
    var videoCoverAttachement = attachmentList?.Where(n => n.Position == AttachmentPosition.Cover).FirstOrDefault();
    attachmentList = attachmentList?.Where(n => n.Position == AttachmentPosition.AttachmentList);
}

@Styles.Render("~/js/lib/plupload/upload")

<div class="container tn-survey-form">
    <div class="jh-post-top tn-mb-20 jh-top-center">
        <div class="row">
            <div class="col-xs-1">
                <img onerror="this.onerror = null; this.src='@Tunynet.Utilities.WebUtility.ResolveUrl("~/img/default_Square.png")'" src="@(new AttachmentService(TenantTypeIds.Instance().Section())?.Get(Section.FeaturedImageAttachmentId)?.GetDirectlyUrl("Small"))" width="60" alt="...">
            </div>
            <div class="jh-post-title col-xs-11">
                <div class="jh-title-left">
                    <h4><a href="@CachedUrlHelper.Action("BarSectionDetail", "Post", null, new RouteValueDictionary { { "sectionId", Section.SectionId } })"><strong>@Section.Name</strong></a></h4>
                </div>
                <div class="jh-title-right">
                    <ul class="list-inline">
                        <li>主题数：@Section.ThreadCount</li>
                        <li>回贴数：@(Section.CommentCount)</li>
                        <li>用户数：@Section.GetFavoritedUserCount()</li>
                        @if (Section.Category != null)
                        {
                            <li>所属分类： <a href="@CachedUrlHelper.Action("BarSection", "Post", null, new RouteValueDictionary { { "categoryId", Section.Category.CategoryId } })">@Section.Category.CategoryName</a></li>
                        }
                    </ul>
                </div>
            </div>
        </div>
    </div>
    <div class="jh-padding-white">
        <h5 class="tn-mb-20">
            @(Model.ThreadId == 0 ? "发布贴子" : "编辑贴子")
        </h5>
        @using (Html.BeginAjaxForm("EditThread", "Post", "", FormMethod.Post, new AjaxFormOptions { OnSuccessCallBack = "editThreadCallBack" }, new { @id = "EditThreadForm", @class = "form-horizontal tn-form-validation" }))
        {
            @Html.HiddenFor(n => n.ThreadId)
            @Html.HiddenFor(n => n.SectionId)
            @Html.HiddenFor(n => n.AssociateId)
            @Html.HiddenFor(n => n.AttachmentIds)

            <div class="form-group">
                <div class="col-xs-12">
                    @Html.TextBoxFor(n => n.Subject, new { @class = "form-control", placeholder = "贴子标题" })
                    @Html.ValidationMessageFor(n => n.Subject)
                </div>
            </div>

            <div class="form-group ">
                <div class="col-xs-12 editorDIV">
                    @Html.HtmlEditor(
                       settings =>
                       {
                           settings.Id = "Body";
                           settings.Name = "Body";
                           settings.TenantTypeId = TenantTypeIds.Instance().Thread();
                           settings.Body = Model.Body;
                           settings.HtmlAttributes = new Dictionary<string, object> {
                               { "style", "height:400px;" },
                               { "maximumWords", 20000 } };
                           settings.UEditorExtensionsCollection.Add(new UEditorExtensionUploadFile() { UploadUrl = SiteUrls.Instance().Uploads(AttachmentPosition.AttachmentList) });
                           settings.UEditorExtensionsCollection.Add(new UEditorExtensionUploadImage() { UploadUrl = SiteUrls.Instance().Uploads(AttachmentPosition.Body, "") });
                       })
                    @Html.ValidationMessageFor(n => n.Body)
                    @AttachmentHelper._AttachmentList("Body", attachmentList)
                </div>
            </div>

            <div class="form-group">
                <label class="col-xs-1 control-label tn-width-90">视频上传</label>
                <div class="col-xs-11" id="upload">
                    @if (videoAttachment != null)
                    {
                        @{
                            //视频附件以及封面图
                            var videoAttachment = ViewData.Get<Attachment>("videoAttachment", null);
                            var videoCoverImage = ViewData.Get<Attachment>("videoCoverImage", null);
                        }

                        @Styles.Render("~/js/lib/plupload/upload")
                        @if (videoAttachment != null)
                        {
                            var videoAttachmentId = videoAttachment.AttachmentId;
                            <div class="form-group" id="threadVideo-@videoAttachmentId">
                                @*<label class="col-xs-1 control-label tn-width-90"></label>*@
                                <div class="thumbnail col-xs-2" style="margin-left: 15px;">
                                    <div id="UploadFileImgs-@videoAttachmentId" class="text-center">
                                        @if (videoCoverImage != null)
                                        {
                                            <div class="tn-pic-attachment">
                                                <input type="hidden" class="videoCoverAttachmentId" value="@videoCoverImage.AttachmentId" />
                                                <img class="img-thumbnail img-responsive" src="@videoCoverImage.GetDirectlyUrl("Small")" alt="...">
                                                <button class="btn btn-default btn-xs btn-removeImage" type="button"><i class="fa fa-remove"></i></button>
                                            </div>
                                        }
                                        else
                                        {
                                            @Html.FileUploader(setting =>
                                       {
                                           setting.Name = "UploadFileImg";
                                           setting.TenantTypeId = TenantTypeIds.Instance().Thread();
                                           setting.InnerContent = "上传视频封面";
                                           setting.Extensions = "jpg,jpeg,png,bmp";
                                           setting.Position = AttachmentPosition.Cover;
                                           setting.Callbacks.Add("uploadSuccess", "succeedImageSyntony_" + videoAttachmentId);
                                           setting.IsPreview = false;
                                       })
                                        }
                                    </div>
                                    <div class="caption">
                                        <p id="attname" class="tn-no-mb tn-overflow-hidden tn-break-word" style="height:70px;">
                                            @videoAttachment.FriendlyFileName
                                        </p>
                                        <input type="hidden" class="videoAttachmentId" value="@videoAttachmentId" />
                                        <a class="btn-removeVideo pull-right" href="javascript:;">删除</a>
                                    </div>
                                </div>
                            </div>

                            <script type="text/javascript">
        require(['jquery', 'tnlayer','livequery'], function ($) {

            //移除视频
            $('.btn-removeVideo').off('click').on('click', function () {
                $('#upload').html('@Html.FileUploader(setting =>
                              { setting.Name = "UploadFileVideo";
                                  setting.TenantTypeId = TenantTypeIds.Instance().Thread();
                                  setting.InnerContent = "上传视频";
                                  setting.Extensions = "mp4";
                                  setting.IsPreview =false;
                                  setting.Position = AttachmentPosition.Body;
                                  setting.Callbacks.Add("uploadSuccess", "succeedSyntony");
                              })');
                $('#threadVideo-' + '@videoAttachmentId').remove();
            });

            //上传成功回调
            $.fn.succeedImageSyntony_@videoAttachmentId = function (file, data) {
                var $this = $("#UploadFileImgs-" + "@videoAttachmentId");
                var itemTmpl = '<div class="tn-pic-attachment">\
                                    <input type="hidden" class="videoCoverAttachmentId" value="'+ data.attachmentId + '" />\
                                    <img class="img-thumbnail img-responsive" src="' + data.url + '" alt="...">\
                                    <button class="btn btn-default btn-xs btn-removeImage" type="button"><i class="fa fa-remove"></i></button>\
                                </div>';
                $this.append(itemTmpl);
                $this.find("div[id^='uploader-UploadFile']").remove();
            }

            //移除标题图
            $('.btn-removeImage').livequery('click', function () {
                var temp = '@Html.FileUploader(setting =>
                               {
                                   setting.Name = "UploadFileImg";
                                   setting.TenantTypeId = TenantTypeIds.Instance().Thread();
                                   setting.InnerContent = "上传视频封面";
                                   setting.Extensions = "jpg,jpeg,png,bmp";
                                   setting.Position = AttachmentPosition.Cover;
                                   setting.Callbacks.Add("uploadSuccess", "succeedImageSyntony_"+videoAttachmentId);
                               })';
                var $this = $(this);
                $("#UploadFileImgs-" + "@videoAttachmentId").append(temp);
                $this.parent().remove();
            });

        });
                            </script>
                        }

                    }
                    else
                    {
                        @Html.FileUploader(setting =>
                            {
                                setting.Name = "UploadFileVideo";
                                setting.TenantTypeId = TenantTypeIds.Instance().Thread();
                                setting.InnerContent = "上传视频";
                                setting.Extensions = "mp4";
                                setting.IsPreview = false;
                                setting.Position = AttachmentPosition.Body;
                                setting.Callbacks.Add("uploadSuccess", "succeedSyntony");
                            })
                    }
                </div>
            </div>

            if (threadcategories != null && threadcategories.Any())
            {
                <div class="form-group">
                    <label class="col-xs-1 control-label tn-width-90">贴子分类</label>
                    <div class="col-xs-3">
                        <select class="form-control" name="CategoryId">
                            @foreach (var item in threadcategories)
                            {
                                <option value="@item.CategoryId" @(item.CategoryId == Model.CategoryId ? "selected" : "")>@item.CategoryName</option>
                            }
                        </select>
                    </div>
                </div>
            }
            <div class="form-group">
                <div class="col-xs-2">
                    <button class="btn btn-primary btn-submit" type="button">确定</button>
                    <button type="button" class="btn btn-default cancel">取消</button>
                </div>
            </div>
        }
    </div>
</div>

<script type="text/javascript">
    require(['jquery', 'ZeroClipboard', 'tnlayer', 'ueditor'], function ($, ZeroClipboard, tnlayer) {
        window['ZeroClipboard'] = ZeroClipboard;
        //提交
        $('.btn-submit').on("click", function () {

            var $videoAttachmentId = $('.videoAttachmentId');
            var $videoCoverAttachmentId = $('.videoCoverAttachmentId');

            var array = [];
            var attachmentId;
            $videoAttachmentId.each(function () {
                attachmentId = Number($(this).val());
                if (!isNaN(attachmentId)) {
                    array.push(attachmentId);
                }
            });
            $videoCoverAttachmentId.each(function () {
                attachmentId = Number($(this).val());
                if (!isNaN(attachmentId)) {
                    array.push(attachmentId);
                }
            });

            $.fn.getAttachmentIds(array);

            $('#EditThreadForm').submit();
        })

        //回调
        $.fn.editThreadCallBack = function (data) {
            data = JSON.parse(data);
            if (data.state == 1) {
                layer.msg("发贴成功", {
                    icon: 1
                });
                setTimeout(function () {
                    window.location.href = "@CachedUrlHelper.Action("ThreadDetail", "Post")?threadId=" + data.threadId;
                }, 1500);
            }
            else {
                layer.msg("发布内容过于频繁", {
                    icon: 2
                });
            }
        }

        //上传成功回调
        $.fn.succeedSyntony = function (file, data) {
            $.get('@CachedUrlHelper.Action("_EditThreadVideo","Post")', { videoAttachmentId: data.attachmentId, t: (new Date()).valueOf() }, function (html) {
                $('#upload').html(html);
            })
        }

        function formIsDirty(form) {
            for (var i = 0; i < form.elements.length; i++) {
                var element = form.elements[i];
                var type = element.type;
                if (type == "text" || type == "textarea") {
                    if (element.value != element.defaultValue) {
                        return true;
                    }
                }
            }
            return false;
        }

        //取消
        $('.cancel').on("click", function () {
            if (formIsDirty(document.forms["EditThreadForm"])) {
                layer.confirm("编辑的内容还未提交，是否返回？", { btn: ['确认', '取消'] }, function () {
                    history.go(-1);
                })
            } else {
                history.go(-1);
            }
        })

    });

</script>
