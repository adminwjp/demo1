@model UserProfileEditModel

@{
    ViewData["Title"] = new string[] { "用户资料" };
    TempData["SidebarType"] = "UserSetting";
    var registerType = ViewData.Get<RegisterType>("RegisterType", RegisterType.MobileOrEmail);
    var user = UserContext.CurrentUser;
    var testUserId = Utility.GetTestUserId();
    bool isTest = user.UserId == testUserId;


}

<div class="row jh-space-setup">
    @{
        var sidebarType = TempData.Get<string>("SidebarType", string.Empty);

        Func<string, string> subMenu = (SidebarType) =>
        {

            if (sidebarType == SidebarType)
                return "class=active";
            else
                return string.Empty;
        };
        var accountTypes = new AccountBindingService().GetAccountTypes(true);
        var user = UserContext.CurrentUser;
    }
    @Styles.Render("~/js/lib/plupload/upload")
    <div class="col-xs-2">
        <div class="jh-space-left">
            <div class="jh-user-head">
                @Html.ShowUserAvatar(userId: user.UserId, avatarSizeType: AvatarSizeType.Big, enableClientCaching: false, enableNavigate: true, isShowUserCard: false)
                <button class="btn btn-default layerAvatar"><i class="fa fa-pencil" aria-hidden="true"></i></button>
            </div>
            <ul class="list-unstyled">
                <li @subMenu("UserSetting")><a href="@SiteUrls.Instance().UserSetting()">用户资料</a></li>
                @if (accountTypes != null && accountTypes.Any() && Utility.CheckThirdPartyLogin())
                {
                    <li @subMenu("AccountBinding")><a href="@SiteUrls.Instance().AccountBinding()">帐号绑定</a></li>
                }
                <li @subMenu("MyNotice")><a href="@SiteUrls.Instance().MyNotice()">我的通知</a></li>
                <li @subMenu("MyPoints")><a href="@SiteUrls.Instance().MyPoints()">我的积分</a></li>
                <li @subMenu("PointTask")><a href="@SiteUrls.Instance().PointTask()">积分任务</a></li>
                <li><a href="@SiteUrls.Instance().MedalShop()">勋章馆</a></li>
            </ul>
        </div>
    </div>

    <script type="text/javascript">
    require(['jquery', 'tnlayer'], function ($, tnlayer) {
        $(".layerAvatar").click(function () {
            tnlayer.layermodal('头像设置', '@CachedUrlHelper.Action("_Avatar", "UserSpace")', '550px', '510px');
        });
    })
    </script>

    <div class="col-xs-10">
        <div class="jh-space-right jh-padding-white">
            <div class="tn-title">
                <h4>用户资料</h4>
            </div>
            @if (!isTest)
            {
                <div id="gengxin">
                    @Html.Action("_UserProfile", "UserSpace")
                </div>


                <hr />
                using (Html.BeginForm("UserSetting", "UserSpace", FormMethod.Post, new { @id = "UserSettingForm", @class = "form-horizontal tn-form-validation" }))
                {
                    @Html.HiddenFor(n => n.UserId)
                    @Html.ValidationMessageFor(n => n.UserId)

                    <div class="form-group">
                        @Html.LabelFor(n => n.TrueName, new { @class = "col-xs-2 control-label" })
                        <div class="col-xs-4">
                            @Html.TextBoxFor(n => n.TrueName, new { @class = "form-control" })
                            @Html.ValidationMessageFor(n => n.TrueName)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(n => n.Gender, new { @class = "col-xs-2 control-label" })
                        <div class="col-xs-4">
                            <label class="radio-inline">
                                @Html.RadioButtonFor(n => n.Gender, GenderType.Male, new { @id = "inlineRadio1" })男
                            </label>
                            <label class="radio-inline">
                                @Html.RadioButtonFor(n => n.Gender, GenderType.FeMale, new { @id = "inlineRadio1" })女
                            </label>
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(n => n.NowAreaCode, new { @class = "col-xs-2 control-label" })

                        <div class="col-xs-9 tn-ml-15">
                            <div class="row jh-space-row">
                                @Html.AreaDropDownListFor(n => n.NowAreaCode)
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(n => n.Introduction, new { @class = "col-xs-2 control-label" })
                        <div class="col-xs-6">
                            @Html.TextAreaFor(n => n.Introduction, new { @class = "form-control", @rows = "5" })
                            @Html.ValidationMessageFor(n => n.Introduction)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-xs-offset-2 col-xs-10">
                            <button id="tijiao" type="button" class="btn btn-primary tn-btn-wp">确定</button>
                        </div>
                    </div>

                }
            }
            else
            {
                using (Html.BeginForm("UserSetting", "UserSpace", FormMethod.Post, new { @id = "UserSettingForm", @class = "form-horizontal tn-form-validation" }))
                {
                    <div class="form-group">
                        @Html.LabelFor(n => n.Introduction, new { @class = "col-xs-2 control-label" })
                        <div class="col-xs-6">
                            @Model.Introduction
                        </div>
                    </div>
                }
            }

        </div>
    </div>
</div>

<script type="text/javascript">
    require(['jquery', 'tnlayer', 'linkageDropDownList'], function ($, tnlayer) {


        //倒计时
        var count = 60;
        function GetNumber() {
            $("#getCode").attr("disabled", "disabled");
            $("#getCode").val(count + "秒之后再次获取")
            count--;
            if (count >= 0) {
                setTimeout(GetNumber, 1000);
            }
            else {
                $("#getCode").val("免费获取短信激活码");
                $("#getCode").removeAttr("disabled");
                count = 60;
            }
        };
        $("#tijiao").click(function myfunction() {
            $("#UserSettingForm").validate();
            if ($("#UserSettingForm").valid()) {
                $.post("@SiteUrls.Instance().UserSetting()", $("#UserSettingForm").serialize(), function myfunction(data) {
                    if (data==1) {
                        layer.msg("保存成功", {
                            icon: 1

                        });
                        window.setTimeout(function myfunction() {
                            location.replace("@SiteUrls.Instance().UserSetting()");
                        }, 2000)

                    }
                    else if (data==-1) {
                        layer.msg("昵称及真实姓名修改不能过于频繁", {
                            icon: 2
                        });
                    }else {
                        layer.msg("保存失败", {
                            icon: 2
                        });
                    }
                })
            }
        });
    })

</script>
