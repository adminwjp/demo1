@model ContentItemEditModel
@{
    //标签
    var tagsOfItem = ViewData.Get<IEnumerable<ItemInTag>>("tagsOfItem", new List<ItemInTag>());
    var tagsOfItemvalue = string.Join(",", tagsOfItem.Select(n => n.TagName));
    //栏目
    var category = ViewData.Get<ContentCategory>("category", new ContentCategory());
    var categorylist = ViewData.Get<List<SelectListItem>>("categorylist", new List<SelectListItem>());
    var currentUser = UserContext.CurrentUser;
    TempData["myhome-check"] = "editcms";
    var attachmentList = ViewData.Get<IEnumerable<Attachment>>("attachmentList", null);
    var associateId = Model.ContentItemId > 0 ? Model.ContentItemId : IdGenerator.Next();
}
<style>
    .btn-removeImage {
        top: 3px;
        position: absolute;
        left: 110px;
    }
</style>
@*//标签*@
@Styles.Render("~/js/lib/tags/css/tokenfield")
<div class="row">
    <div class="col-xs-12">
        <div class="tn-plr-15">
            @if (Model.ContentItemId > 0)
            {
                <div class="tn-title" style="overflow:visible;height:38px;">
                    <h5 class="pull-left tn-mt-0">写文章</h5>
                </div>
            }
            else
            {
                <div class="tn-title" style="overflow:visible;height:38px;">
                    @Html.Action("_ListDraft", "UserSpace", new RouteValueDictionary { { "userId", currentUser.UserId } })
                </div>
            }
            @using (Html.BeginAjaxForm("_EditCMS", "UserSpace", "", FormMethod.Post, new AjaxFormOptions { OnSuccessCallBack = "_EditCMSCallBack" }, new { @class = "form-horizontal tn-survey-form tn-form-validation", @id = "_EditCMS" }))
            {
                @Html.HiddenFor(n => n.ContentItemId)
                @Html.HiddenFor(n => n.ContentModelId)
                @Html.HiddenFor(n => n.DateCreated)
                @Html.HiddenFor(n => n.Author)
                @Html.ValidationMessageFor(n => n.ContentItemId)
                @Html.ValidationMessageFor(n => n.ContentModelId)
                @Html.ValidationMessageFor(n => n.DateCreated)
                @Html.ValidationMessage("Author")
                @Html.HiddenFor(n => n.IsDraft)
                @Html.ValidationMessageFor(n => n.IsDraft)
                @Html.HiddenFor(n => n.AttachmentIds)
                @Html.ValidationMessageFor(n => n.AttachmentIds)
                <div class="form-group">
                    <div class="col-xs-12">
                        @Html.TextBoxFor(n => n.Subject, new { @class = "form-control", @placeholder = "文章标题" })
                        @Html.ValidationMessageFor(n => n.Subject)
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-xs-12">
                        @Html.HtmlEditor(
       settings =>
       {
           settings.Id = "Body";
           settings.Name = "Body";
           settings.TenantTypeId = TenantTypeIds.Instance().CMS_Article();
           settings.Body = Model.Body;
           settings.HtmlAttributes = new Dictionary<string, object> {
                                  { "style", "height:400px;" },
                                  { "maximumWords", 20000 },
                                  { "initialFrameWidth", "100%" } };
           settings.UEditorExtensionsCollection.Add(new UEditorExtensionUploadFile() { UploadUrl = SiteUrls.Instance().Uploads(AttachmentPosition.AttachmentList) });
           settings.UEditorExtensionsCollection.Add(new UEditorExtensionUploadImage() { UploadUrl = SiteUrls.Instance().Uploads(AttachmentPosition.Body, "") });
       })
                        @Html.ValidationMessageFor(n => n.Body)
                        @AttachmentHelper._AttachmentList("Body", attachmentList)
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-xs-1 control-label">标题图</label>
                    @AttachmentHelper._UploadFeaturedImage(Model.FeaturedImageAttachmentId, TenantTypeIds.Instance().CMS_Article())
                    @Html.ValidationMessageFor(n => n.FeaturedImageAttachmentId)
                </div>
                <div class="form-group">
                    <label class="col-xs-1 control-label">设置标签</label>
                    <div class="col-xs-4">
                        <input type="text" class="form-control" id="tokenfield" value="@tagsOfItemvalue" />
                        <span class="help-block">多个标签请用空格隔开,最多添加5个标签,标签长度不能超过60</span>
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-xs-1 control-label">投稿到</label>
                    <div class="col-xs-4">
                        @Html.DropDownList("CategoryId", categorylist, new { @class = "form-control" })
                        @Html.ValidationMessage("CategoryId")
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-xs-4 col-xs-offset-1">
                        <button id="answer" type="button" class="btn btn-primary btn-submit tn-btn-wp">确定</button>
                        @if (Model.ContentItemId > 0 && Model.AuditStatus != 0)
                        {
                            <a type="button" class="btn btn-default tn-btn-wp cancel-submit" href="@SiteUrls.Instance().MyHome(currentUser.UserId)#cms">取消</a>
                        }
                        else
                        {
                            <button type="button" class="btn btn-default tn-btn-wp" id="posttext">存为草稿</button>
                        }
                    </div>
                </div>
            }
        </div>
    </div>
</div>
<script type="text/javascript">
    require(['jquery', 'ZeroClipboard', 'ueditor', 'tnlayer', 'uploader', 'tag'], function ($, ZeroClipboard, tnlayer) {
        window['ZeroClipboard'] = ZeroClipboard;

        $(function () {
            $('input, textarea,textbox').placeholder({ customClass: 'my-placeholder' });
        });

        //提交按钮
        $("#answer").on('click', function () {
            $("#IsDraft").val(false);
            $.fn.getAttachmentIds();
            $("#_EditCMS").submit();
        });

        //回调函数
        $.fn._EditCMSCallBack = function (data) {
            if (data.MessageType == 1) {
                layer.msg(data.MessageContent, {
                    icon: 1
                });
                setTimeout(function () {
                    window.location.reload();
                }, 500)
            }
            else {
                layer.msg(data.MessageContent, {
                    icon: 2
                });
            }
        };

        //提交草稿
        $("#posttext").on('click', function () {
            $("#IsDraft").val(true);
            $.fn.getAttachmentIds();
            $("#_EditCMS").submit();
        });

        $.fn.showbtn = function () {
            $(".btn-removeImage").show();
        }
        $.fn.hidebtn = function () {
            $(".btn-removeImage").hide();
        }

        //标签
        $('#tokenfield').tokenfield({
            limit: 5,
            showAutocompleteOnFocus: true
        })

        $('#tokenfield').on('tokenfield:createtoken', function (event) {
            var existingTokens = $(this).tokenfield('getTokens');
            if (event.attrs.value.length > 60) {
                layer.msg("标签长度不能超过60", {
                    icon: 2
                });
            }
            else {
                $.each(existingTokens, function (index, token) {
                    if (token.value === event.attrs.value)
                        event.preventDefault();
                });
            };
        });

        //取消编辑文章
        $('.cancel-submit').on("click", function () {
            $('a[data-type="cms"]').click();
        })
    })
</script>