// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Product.Infrastructure;

namespace Utility.Ef.Demo.Migrations.Product
{
    [DbContext(typeof(ProductDbContext))]
    partial class ProductDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.6");

            modelBuilder.Entity("Product.Domain.Entities.BrandEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("BigPic")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasColumnName("big_pic");

                    b.Property<string>("BrandStory")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasColumnName("brand_story");

                    b.Property<long>("CommentCount")
                        .HasColumnType("INTEGER")
                        .HasColumnName("comment_count");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT")
                        .HasColumnName("description");

                    b.Property<bool>("FactoryStatus")
                        .HasColumnType("INTEGER")
                        .HasColumnName("factory_status");

                    b.Property<bool>("IfShow")
                        .HasColumnType("INTEGER")
                        .HasColumnName("if_show");

                    b.Property<long>("ImageIds")
                        .HasMaxLength(500)
                        .HasColumnType("INTEGER")
                        .HasColumnName("image_ids");

                    b.Property<string>("Images")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT")
                        .HasColumnName("images");

                    b.Property<string>("Letter")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasColumnName("letter");

                    b.Property<string>("Logo")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasColumnName("logo");

                    b.Property<long>("LogoId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("logo_id");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.Property<int>("Orders")
                        .HasColumnType("INTEGER")
                        .HasColumnName("orders");

                    b.Property<long>("ProductCatagoryId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("product_catagory_id");

                    b.Property<long>("ProductCount")
                        .HasColumnType("INTEGER")
                        .HasColumnName("product_count");

                    b.Property<long>("ShopId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("shop_id");

                    b.Property<string>("Tag")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasColumnName("tag");

                    b.HasKey("Id");

                    b.ToTable("t_brand");
                });

            modelBuilder.Entity("Product.Domain.Entities.CartDetailEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<long>("CreationTime")
                        .HasColumnType("INTEGER")
                        .HasColumnName("creation_time");

                    b.Property<long>("DeletionTime")
                        .HasColumnType("INTEGER")
                        .HasColumnName("deletion_time");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER")
                        .HasColumnName("is_deleted");

                    b.Property<long>("LastModificationTime")
                        .HasColumnType("INTEGER")
                        .HasColumnName("last_modification_time");

                    b.Property<long>("Number")
                        .HasColumnType("INTEGER")
                        .HasColumnName("number");

                    b.Property<long>("ProductId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("product_id");

                    b.Property<long?>("UserId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.ToTable("t_cart_detail");
                });

            modelBuilder.Entity("Product.Domain.Entities.CartEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<long>("CreationTime")
                        .HasColumnType("INTEGER")
                        .HasColumnName("creation_time");

                    b.Property<long>("DeletionTime")
                        .HasColumnType("INTEGER")
                        .HasColumnName("deletion_time");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER")
                        .HasColumnName("is_deleted");

                    b.Property<long>("LastModificationTime")
                        .HasColumnType("INTEGER")
                        .HasColumnName("last_modification_time");

                    b.Property<string>("ProductIds")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT")
                        .HasColumnName("product_ids");

                    b.Property<long?>("UserId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.ToTable("t_cart");
                });

            modelBuilder.Entity("Product.Domain.Entities.ProductAttribueEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<long>("AttributeId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("attribute_id");

                    b.Property<long>("CreationTime")
                        .HasColumnType("INTEGER")
                        .HasColumnName("creation_time");

                    b.Property<long>("DeletionTime")
                        .HasColumnType("INTEGER")
                        .HasColumnName("deletion_time");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER")
                        .HasColumnName("is_deleted");

                    b.Property<long>("LastModificationTime")
                        .HasColumnType("INTEGER")
                        .HasColumnName("last_modification_time");

                    b.Property<long>("ProductId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("product_id");

                    b.Property<string>("Value")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT")
                        .HasColumnName("value");

                    b.HasKey("Id");

                    b.ToTable("t_product_attribute");
                });

            modelBuilder.Entity("Product.Domain.Entities.ProductCatagoryAttribueEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<long>("CatagoryId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("catagory_id");

                    b.Property<long>("CreationTime")
                        .HasColumnType("INTEGER")
                        .HasColumnName("creation_time");

                    b.Property<long>("DeletionTime")
                        .HasColumnType("INTEGER")
                        .HasColumnName("deletion_time");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER")
                        .HasColumnName("is_deleted");

                    b.Property<long>("LastModificationTime")
                        .HasColumnType("INTEGER")
                        .HasColumnName("last_modification_time");

                    b.Property<string>("Name")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.Property<int>("Orders")
                        .HasColumnType("INTEGER")
                        .HasColumnName("orders");

                    b.Property<long>("ParentId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("parent_id");

                    b.HasKey("Id");

                    b.ToTable("t_catagory_attribue");
                });

            modelBuilder.Entity("Product.Domain.Entities.ProductCatagoryEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasColumnName("code");

                    b.Property<long>("CreationTime")
                        .HasColumnType("INTEGER")
                        .HasColumnName("creation_time");

                    b.Property<long>("DeletionTime")
                        .HasColumnType("INTEGER")
                        .HasColumnName("deletion_time");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT")
                        .HasColumnName("description");

                    b.Property<int>("Flag")
                        .HasColumnType("INTEGER")
                        .HasColumnName("flag");

                    b.Property<long>("ImageId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("image_id");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER")
                        .HasColumnName("is_deleted");

                    b.Property<long>("LastModificationTime")
                        .HasColumnType("INTEGER")
                        .HasColumnName("last_modification_time");

                    b.Property<string>("Link")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("link");

                    b.Property<string>("Name")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.Property<int>("Orders")
                        .HasColumnType("INTEGER")
                        .HasColumnName("orders");

                    b.Property<long>("ParentId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("parent_id");

                    b.Property<long>("ShopId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("shop_id");

                    b.Property<string>("Target")
                        .HasMaxLength(10)
                        .HasColumnType("TEXT")
                        .HasColumnName("target");

                    b.HasKey("Id");

                    b.ToTable("t_product_catagory");
                });

            modelBuilder.Entity("Product.Domain.Entities.ProductEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<long>("ActivityId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("activity_id");

                    b.Property<long>("CatagoryId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("catagory_id");

                    b.Property<string>("CreateAccount")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT")
                        .HasColumnName("create_account");

                    b.Property<long>("CreationTime")
                        .HasColumnType("INTEGER")
                        .HasColumnName("creation_time");

                    b.Property<long>("DeletionTime")
                        .HasColumnType("INTEGER")
                        .HasColumnName("deletion_time");

                    b.Property<string>("Description")
                        .HasMaxLength(2147483647)
                        .HasColumnType("TEXT")
                        .HasColumnName("description");

                    b.Property<long>("GiftID")
                        .HasColumnType("INTEGER")
                        .HasColumnName("gift_id");

                    b.Property<int>("Hit")
                        .HasColumnType("INTEGER")
                        .HasColumnName("hit");

                    b.Property<string>("Images")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT")
                        .HasColumnName("images");

                    b.Property<string>("Introduce")
                        .HasMaxLength(2147483647)
                        .HasColumnType("TEXT")
                        .HasColumnName("introduce");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER")
                        .HasColumnName("is_deleted");

                    b.Property<bool>("IsNew")
                        .HasColumnType("INTEGER")
                        .HasColumnName("is_new");

                    b.Property<string>("Keywords")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("keywords");

                    b.Property<long>("LastModificationTime")
                        .HasColumnType("INTEGER")
                        .HasColumnName("last_modification_time");

                    b.Property<string>("MaxPicture")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("max_picture");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.Property<decimal?>("NowPrice")
                        .HasColumnType("TEXT")
                        .HasColumnName("now_price");

                    b.Property<string>("Picture")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("picture");

                    b.Property<decimal?>("Price")
                        .HasColumnType("TEXT")
                        .HasColumnName("price");

                    b.Property<string>("ProductHTML")
                        .HasMaxLength(2147483647)
                        .HasColumnType("TEXT")
                        .HasColumnName("product_html");

                    b.Property<bool>("Sale")
                        .HasColumnType("INTEGER")
                        .HasColumnName("sale");

                    b.Property<int>("Sales")
                        .HasColumnType("INTEGER")
                        .HasColumnName("sales");

                    b.Property<int>("Score")
                        .HasColumnType("INTEGER")
                        .HasColumnName("score");

                    b.Property<string>("SearchKey")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT")
                        .HasColumnName("search_key");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER")
                        .HasColumnName("status");

                    b.Property<int>("Stock")
                        .HasColumnType("INTEGER")
                        .HasColumnName("stock");

                    b.Property<string>("Title")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasColumnName("title");

                    b.Property<string>("Unit")
                        .HasMaxLength(5)
                        .HasColumnType("TEXT")
                        .HasColumnName("unit");

                    b.Property<string>("UpdateAccount")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT")
                        .HasColumnName("update_account");

                    b.HasKey("Id");

                    b.ToTable("t_product");
                });

            modelBuilder.Entity("Product.Domain.Entities.SpecEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Color")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasColumnName("color");

                    b.Property<long>("CreationTime")
                        .HasColumnType("INTEGER")
                        .HasColumnName("creation_time");

                    b.Property<long>("DeletionTime")
                        .HasColumnType("INTEGER")
                        .HasColumnName("deletion_time");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER")
                        .HasColumnName("is_deleted");

                    b.Property<long>("LastModificationTime")
                        .HasColumnType("INTEGER")
                        .HasColumnName("last_modification_time");

                    b.Property<decimal?>("NowPrice")
                        .HasColumnType("TEXT")
                        .HasColumnName("now_price");

                    b.Property<decimal?>("Price")
                        .HasColumnType("TEXT")
                        .HasColumnName("price");

                    b.Property<long?>("ProductId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("product_id");

                    b.Property<int>("Sales")
                        .HasColumnType("INTEGER")
                        .HasColumnName("sales");

                    b.Property<string>("Size")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT")
                        .HasColumnName("size");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER")
                        .HasColumnName("status");

                    b.Property<int>("Stock")
                        .HasColumnType("INTEGER")
                        .HasColumnName("stock");

                    b.HasKey("Id");

                    b.ToTable("t_spec");
                });
#pragma warning restore 612, 618
        }
    }
}
