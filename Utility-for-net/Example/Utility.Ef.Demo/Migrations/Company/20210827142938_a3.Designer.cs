// <auto-generated />
using System;
using Company.Ef;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Utility.Ef.Demo.Migrations.Company
{
    [DbContext(typeof(CompanyDbContext))]
    [Migration("20210827142938_a3")]
    partial class a3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.6");

            modelBuilder.Entity("Company.Domain.Entities.CompanyCatagoryEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("BackgroundImage")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasColumnName("background_image");

                    b.Property<string>("Body")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasColumnName("body");

                    b.Property<string>("ButtonHref1")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasColumnName("button_href1");

                    b.Property<string>("ButtonHref2")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasColumnName("button_href2");

                    b.Property<string>("ButtonName1")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasColumnName("button_name1");

                    b.Property<string>("ButtonName2")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasColumnName("button_name2");

                    b.Property<string>("Color")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasColumnName("color");

                    b.Property<long>("CreateDate")
                        .HasColumnType("INTEGER")
                        .HasColumnName("create_date");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT")
                        .HasColumnName("description");

                    b.Property<bool?>("Enable")
                        .HasColumnType("INTEGER")
                        .HasColumnName("enable");

                    b.Property<string>("Feature")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasColumnName("feature");

                    b.Property<string>("Filter")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasColumnName("filter");

                    b.Property<int>("Flag")
                        .HasColumnType("INTEGER")
                        .HasColumnName("flag");

                    b.Property<string>("Href")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasColumnName("href");

                    b.Property<string>("Icon")
                        .HasColumnType("TEXT")
                        .HasColumnName("icon");

                    b.Property<string>("Lanage")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasColumnName("lanage");

                    b.Property<string>("Logo")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasColumnName("logo");

                    b.Property<string>("Logo1")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasColumnName("logo1");

                    b.Property<long>("ModifyDate")
                        .HasColumnType("INTEGER")
                        .HasColumnName("modify_date");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.Property<string>("Process")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasColumnName("process");

                    b.Property<int>("Review")
                        .HasColumnType("INTEGER")
                        .HasColumnName("review");

                    b.Property<string>("Style")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasColumnName("style");

                    b.Property<string>("Tel")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasColumnName("tel");

                    b.Property<string>("Title")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasColumnName("title");

                    b.Property<long?>("parent_id")
                        .HasMaxLength(50)
                        .HasColumnType("INTEGER")
                        .HasColumnName("parent_id");

                    b.HasKey("Id")
                        .HasName("id");

                    b.HasIndex("parent_id");

                    b.ToTable("t_c_catagory");
                });

            modelBuilder.Entity("Company.Domain.Entities.LangeEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<long>("CreateDate")
                        .HasColumnType("INTEGER")
                        .HasColumnName("create_date");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasColumnName("description");

                    b.Property<bool?>("Enable")
                        .HasColumnType("INTEGER")
                        .HasColumnName("enable");

                    b.Property<string>("Lanage")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasColumnName("lanage");

                    b.Property<long>("ModifyDate")
                        .HasColumnType("INTEGER")
                        .HasColumnName("modify_date");

                    b.Property<long>("RelationId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("relation_id");

                    b.Property<string>("RelationTable")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasColumnName("relation_table");

                    b.Property<string>("Val1")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasColumnName("val1");

                    b.Property<string>("Val2")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasColumnName("val2");

                    b.Property<string>("Val3")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasColumnName("val3");

                    b.Property<string>("Val4")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasColumnName("val4");

                    b.Property<string>("Val5")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasColumnName("val5");

                    b.Property<string>("Val6")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasColumnName("val6");

                    b.Property<string>("Val7")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasColumnName("val7");

                    b.HasKey("Id")
                        .HasName("id");

                    b.ToTable("t_c_lange");
                });

            modelBuilder.Entity("Company.Domain.Entities.RelationEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<long>("CreateDate")
                        .HasColumnType("INTEGER")
                        .HasColumnName("create_date");

                    b.Property<bool?>("Enable")
                        .HasColumnType("INTEGER")
                        .HasColumnName("enable");

                    b.Property<long>("Fk1")
                        .HasColumnType("INTEGER")
                        .HasColumnName("fk1");

                    b.Property<long>("Fk2")
                        .HasColumnType("INTEGER")
                        .HasColumnName("fk2");

                    b.Property<string>("Flag")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasColumnName("flag");

                    b.Property<string>("Lanage")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasColumnName("lanage");

                    b.Property<long>("ModifyDate")
                        .HasColumnType("INTEGER")
                        .HasColumnName("modify_date");

                    b.HasKey("Id")
                        .HasName("id");

                    b.ToTable("t_c_relation");
                });

            modelBuilder.Entity("Utility.Demo.Domain.Entities.MenuEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AceIcon")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("AttributesJson")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<bool>("Checked")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Collpse")
                        .HasColumnType("INTEGER");

                    b.Property<long>("CreationTime")
                        .HasColumnType("INTEGER");

                    b.Property<long>("DeletionTime")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("Groups")
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("Href")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("HuiIcon")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("IconCls")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("IdName")
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<long>("LastModificationTime")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<int>("Orders")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Soure")
                        .HasColumnType("TEXT");

                    b.Property<string>("State")
                        .HasMaxLength(6)
                        .HasColumnType("TEXT");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<long>("parent_id")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("parent_id");

                    b.ToTable("t_c_menu");
                });

            modelBuilder.Entity("Company.Domain.Entities.CompanyCatagoryEntity", b =>
                {
                    b.HasOne("Company.Domain.Entities.CompanyCatagoryEntity", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("parent_id");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Utility.Demo.Domain.Entities.MenuEntity", b =>
                {
                    b.HasOne("Utility.Demo.Domain.Entities.MenuEntity", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("parent_id")
                        .HasConstraintName("fk_parent_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Company.Domain.Entities.CompanyCatagoryEntity", b =>
                {
                    b.Navigation("Children");
                });

            modelBuilder.Entity("Utility.Demo.Domain.Entities.MenuEntity", b =>
                {
                    b.Navigation("Children");
                });
#pragma warning restore 612, 618
        }
    }
}
