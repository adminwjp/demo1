<?xml version="1.0" encoding="utf-8"?>
<!-- 
This template was written to work with NHibernate.Test.
Copy the template to your NHibernate.Test project folder and rename it in hibernate.cfg.xml and change it 
for your own use before compile tests in VisualStudio.
-->
<hibernate-configuration  xmlns="urn:nhibernate-configuration-2.2" >
	<session-factory name="NHibernate.Test">
		<!--<property name="connection.driver_class">NHibernate.Driver.MySqlDataDriver</property>
		<property name="connection.connection_string">
      Database=socialcontact;Data Source=localhost;User Id=root;Password=wjp930514.;Old Guids=True;charset=utf8;
    </property>
		<property name="dialect">NHibernate.Dialect.MySQL5Dialect</property>-->

	<property name="connection.driver_class">NHibernate.Driver.SQLite20Driver</property>
		<!-- DateTimeFormatString allows to prevent storing the fact that written date was having kind UTC,
		     which dodges the undesirable time conversion to local done on reads by System.Data.SQLite.
		     See https://system.data.sqlite.org/index.html/tktview/44a0955ea344a777ffdbcc077831e1adc8b77a36
		     and https://github.com/nhibernate/nhibernate-core/issues/1362 -->
		<property name="connection.connection_string">
      Data Source=E:/work/utility/Utility-for-net/Example/Example.Web/demo.db;
      DateTimeFormatString=yyyy-MM-dd HH:mm:ss.FFFFFFF;
    </property>
		<property name="dialect">NHibernate.Dialect.SQLiteDialect</property>
    
    <!--<property name="connection.driver_class">NHibernate.Driver.Sql2008ClientDriver</property>
		<property name="connection.connection_string">
			Server=(local);initial catalog=nhibernate;Integrated Security=SSPI
		</property>
		<property name="dialect">NHibernate.Dialect.MsSql2008Dialect</property>-->
    
    <!--<property name="connection.driver_class">NHibernate.Driver.NpgsqlDriver</property>
		<property name="connection.connection_string">
			Server=localhost;Database=nhibernate;User ID=nhibernate;Password=nhibernate;Enlist=true;
		</property>
		<property name="dialect">NHibernate.Dialect.PostgreSQL83Dialect</property>-->
    
    <!--<property name="connection.driver_class">NHibernate.Driver.OracleManagedDataClientDriver</property>
		<property name="connection.connection_string">
			User ID=nhibernate;Password=nhibernate;Data Source=(DESCRIPTION = (ADDRESS = (PROTOCOL = TCP)(HOST = localhost)(PORT = 1521)) (CONNECT_DATA = (SERVER = DEDICATED) (SERVICE_NAME = ORCL)))
		</property>
		<property name="show_sql">false</property>
		<property name="dialect">NHibernate.Dialect.Oracle10gDialect</property>
		<property name="query.substitutions">true 1, false 0, yes 'Y', no 'N'</property>-->
		<!-- If your database setup use an ASCII charset, switch following property to true. -->
		<!--<property name="oracle.use_n_prefixed_types_for_unicode">false</property>-->
		<!-- Depending on your database setup, the default cast length of 4000 may be too big.
		     By example, if previous setting is true, NHibernate may try to use nvarchar2(4000),
		     which will be rejected if its underlying charset is UTF16 and the database
		     MAX_STRING_SIZE is not extended. In such case, reduce it to 2000. -->
		<!--<property name="query.default_cast_length"></property>-->
    
    <property name="use_sql_comments">true</property>
    <property name="command_timeout">30</property>
    <property name="adonet.batch_size">100</property>
    <property name="order_inserts">true</property>
    <property name="order_updates">true</property>
    <property name="adonet.batch_versioned_data">true</property>
    <property name="show_sql">true</property>
    <property name="format_sql">true</property>
    <property name="hbm2ddl.auto">update</property>
    <!--<property name="hbm2ddl.auto">create-drop</property>-->
    <!--<mapping  assembly ="SocialContact.Domain"/>-->
	</session-factory>
</hibernate-configuration>